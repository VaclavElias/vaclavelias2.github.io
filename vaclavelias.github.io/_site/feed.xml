<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="https://www.vaclavelias.com">
  <title>Code or not to code</title>
  <subtitle>Blog about coding in .NET and C#.</subtitle>
  <link href="https://www.vaclavelias.com/feed.xml" rel="self"/>
  <link href="https://www.vaclavelias.com"/>
  <updated>2023-03-15T00:00:00Z</updated>
  <id>https://www.vaclavelias.com</id>
  <author>
    <name>Vaclav Elias</name>
  </author>
  <entry>
    <title>How to reference remote C# code in 11ty</title>
    <link href="https://www.vaclavelias.com/dotnet/remote-csharp-code-reference-example/"/>
    <updated>2023-03-15T00:00:00Z</updated>
    <id>https://www.vaclavelias.com/dotnet/remote-csharp-code-reference-example/</id>
    <content xml:lang="en" type="html">&lt;p&gt;We write blog posts and we want to reference our GitHub project C# code or any code from our projects in 11ty. This is a great way to share and maintain code snippets with the community.&lt;/p&gt;
&lt;h2 id=&quot;11ty-and-remote-code&quot; tabindex=&quot;-1&quot;&gt;11ty and remote code &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/remote-csharp-code-reference-example/#11ty-and-remote-code&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I am new to 11ty so I asked the 11ty community here at &lt;a href=&quot;https://github.com/11ty/eleventy/discussions/2862&quot;&gt;GitHub Discussions&lt;/a&gt; and &lt;a href=&quot;https://github.com/pdehaan&quot;&gt;@pehann&lt;/a&gt; helped me out.&lt;/p&gt;
&lt;p&gt;I have modified the original implementation for this post so it is more generic.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addAsyncShortcode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;remote_include&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;urlPath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sample &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;EleventyFetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token literal-property property&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1d&quot;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; sample&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Example remote C# code reference in markup.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```csharp
{% remote_include &#39;https://raw.githubusercontent.com/stride3d/stride/master/samples/Tutorials/CSharpIntermediate/CSharpIntermediate/CSharpIntermediate.Game/01_UI-Basics/UIByEditor.cs&#39; %}
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Result:&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Copyright (c) .NET Foundation and Contributors (https://dotnetfoundation.org/ &amp;amp; https://stride3d.net)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Distributed under the MIT license. See the LICENSE.md file in the project root for more information.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Stride&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Engine&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Stride&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Graphics&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Stride&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;UI&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Stride&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;UI&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Controls&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;Stride&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;UI&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Events&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;CSharpIntermediate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Code&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;UIByEditor&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token type-list&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;StartupScript&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SpriteFont&lt;/span&gt; Font&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextBlock&lt;/span&gt; textBlock&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;EditText&lt;/span&gt; editText&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token comment&quot;&gt;// Retrieve the page property from the UI component&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; page &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Entity&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;UIComponent&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Page&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;            &lt;span class=&quot;token comment&quot;&gt;// Retrieve UI elements by Type and name&lt;/span&gt;&lt;br /&gt;            textBlock &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RootElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;FindVisualChildOfType&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;TextBlock&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;MyTextBlock&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;            editText &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RootElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;FindVisualChildOfType&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;EditText&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;MyEditText&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;            &lt;span class=&quot;token comment&quot;&gt;// When the text changes, update the textblock&lt;/span&gt;&lt;br /&gt;            editText&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;TextChanged &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;                textBlock&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;My name is: &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; editText&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Text&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;            &lt;span class=&quot;token comment&quot;&gt;// When the button is clicked, we execute a method that clears the textbox&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; button &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RootElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;FindVisualChildOfType&lt;/span&gt;&lt;span class=&quot;token generic class-name&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Button&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;MyButton&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;            button&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Click &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; ButtonClicked&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ButtonClicked&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;object&lt;/span&gt;&lt;/span&gt; sender&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RoutedEventArgs&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token comment&quot;&gt;// Changing the text triggers the TextChanged event again&lt;/span&gt;&lt;br /&gt;            editText&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;            &lt;span class=&quot;token comment&quot;&gt;// We also want to reset the text in the textblock&lt;/span&gt;&lt;br /&gt;            textBlock&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Stride minimal API / Code only approach</title>
    <link href="https://www.vaclavelias.com/stride3d/stride3d-minimal-api-code-only/"/>
    <updated>2022-05-13T00:00:00Z</updated>
    <id>https://www.vaclavelias.com/stride3d/stride3d-minimal-api-code-only/</id>
    <content xml:lang="en" type="html">&lt;p&gt;&lt;strong&gt;12 lines&lt;/strong&gt; of code, this is what it takes to run Stride 3D example below (plus some &lt;code&gt;usings&lt;/code&gt; on the top).&lt;/p&gt;
&lt;p&gt;This works only with &lt;a href=&quot;https://www.stride3d.net/&quot;&gt;Stride&lt;/a&gt; &lt;strong&gt;4.1+&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Follow the steps in this &lt;a href=&quot;https://github.com/VaclavElias/stride-code-only&quot;&gt;stride-code-only&lt;/a&gt; repository.&lt;/p&gt;
&lt;p&gt;Related &lt;a href=&quot;https://twitter.com/VasoElias/status/1525162302487543809&quot;&gt;tweet&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; game &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Game&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;game&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token named-parameter punctuation&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Scene&lt;/span&gt; rootScene&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    game&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;SetupBase3DScene&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token class-name&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt;&lt;/span&gt; entity &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Entity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;Vector3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1f&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0.5f&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3f&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    entity&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;ModelComponent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token constructor-invocation class-name&quot;&gt;CubeProceduralModel&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Generate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;game&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Services&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    entity&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Scene &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; rootScene&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Visual Studio Advance</title>
    <link href="https://www.vaclavelias.com/dotnet/visual-studio-advance/"/>
    <updated>2021-05-24T00:00:00Z</updated>
    <id>https://www.vaclavelias.com/dotnet/visual-studio-advance/</id>
    <content xml:lang="en" type="html">&lt;p&gt;This post is a &lt;strong&gt;quick reference&lt;/strong&gt; and should help you to familiarise quickly with the key and essential &lt;strong&gt;Visual Studio&lt;/strong&gt; (VS) functionality.&lt;/p&gt;
&lt;p&gt;The VS Integrated Development Environment (IDE) might look overwhelming in the beginning but there is no need to know everything. More you work with VS you will start discovering what you need and you will eventually understand the complexity of VS by passive learning.&lt;/p&gt;
&lt;p&gt;Initial notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You should already be familiar with any coding/development IDE&lt;/li&gt;
&lt;li&gt;This is not a tutorial, this is a quick reference on what is the most important or helpful to know when you start working with Visual Studio. Do check any available material to familiarise and learn if you don&#39;t understand this guide&lt;/li&gt;
&lt;li&gt;If you don&#39;t know certain terms just google them&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;content&quot; tabindex=&quot;-1&quot;&gt;Content &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#content&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#1.-solution-vs-project&quot;&gt;1. Solution vs Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#2.-solution-explorer&quot;&gt;2. Solution Explorer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#3.-live-sharing-your-code---collaborative-coding&quot;&gt;3. Sharing your Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#4.-default-configuration---appsettings.cs-%2F-appsettings.json&quot;&gt;4. Default Configuration - AppSettings.cs / appsettings.json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#5.-manage-user-secrets&quot;&gt;5. Manage User Secrets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#6.-editorconfig&quot;&gt;6. editorconfig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#q%26a&quot;&gt;Q&amp;amp;A&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1.-solution-vs-project&quot; tabindex=&quot;-1&quot;&gt;1. Solution vs Project &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#1.-solution-vs-project&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Depends on your circumstances and your team workflow, you might find different (sometimes confusing) folder structure patterns.&lt;/p&gt;
&lt;p&gt;VS projects can be in different physical locations on your drive and your VS solution is referencing them wherever the projects are. You can also have multiple solutions *&lt;strong&gt;.sln&lt;/strong&gt; if you need to reference/view projects in different ways. Many projects will be grouped together in their parent folder.&lt;/p&gt;
&lt;p&gt;Your solution projects might be independent from each other or some of them might have dependencies. The circular dependencies are not allowed and it is an anti-pattern.&lt;/p&gt;
&lt;p&gt;There are many ways to organise your solution. If you work in a team or alone, consistency is important.&lt;/p&gt;
&lt;p&gt;See some basic folder structure examples:&lt;/p&gt;
&lt;h3 id=&quot;example-1---projects-in-one-repository---mono-repo&quot; tabindex=&quot;-1&quot;&gt;Example 1 - Projects in one repository - Mono-repo &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#example-1---projects-in-one-repository---mono-repo&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This example is showing independent projects with no project dependencies, which are grouped together in the &lt;strong&gt;api-bureau.sln&lt;/strong&gt; solution. The intention might be to extract a common library which will be used by all projects. All projects are in the same repository to simplify a workflow for the small team who needs to work across all projects.&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;/api-bureau&lt;br /&gt;/api-bureau/api-bureau.sln&lt;br /&gt;/api-bureau/.gitignore&lt;br /&gt;&lt;br /&gt;/api-bureau/src/ApiBureau.CloudCall.Api&lt;br /&gt;/api-bureau/src/ApiBureau.Confluence.Api&lt;br /&gt;/api-bureau/src/ApiBureau.SharePoint.Api&lt;br /&gt;&lt;br /&gt;/api-bureau/test/ApiBureau.CloudCall.Api.UnitTests&lt;br /&gt;/api-bureau/test/ApiBureau.Confluence.Api.UnitTests&lt;br /&gt;/api-bureau/test/ApiBureau.SharePoint.Api.UnitTests&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;example-2---projects-in-multiple-repositories&quot; tabindex=&quot;-1&quot;&gt;Example 2 - Projects in multiple repositories &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#example-2---projects-in-multiple-repositories&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This example is showing projects, which are grouped together in the &lt;em&gt;ApiBureau.AllApis.sln&lt;/em&gt; solution. The only dependency is that &lt;em&gt;all-apis&lt;/em&gt; project is dependent on all other APIs. The teams working mostly independently prefer to have their repos separated.&lt;/p&gt;
&lt;p&gt;Note: Visual Studio 2022+ supports managing multiple repositories from one solution.&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;/api-bureau&lt;br /&gt;/api-bureau/all-apis/.gitignore&lt;br /&gt;/api-bureau/all-apis/ApiBureau.AllApis.sln&lt;br /&gt;/api-bureau/all-api/src/ApiBureau.AllApis.Console&lt;br /&gt;&lt;br /&gt;/api-bureau/cloudcall-api/.gitignore&lt;br /&gt;/api-bureau/cloudcall-api/ApiBureau.CloudCall.sln&lt;br /&gt;/api-bureau/cloudcall-api/src/ApiBureau.CloudCall.Api&lt;br /&gt;/api-bureau/cloudcall-api/test/ApiBureau.CloudCall.Api.UnitTests&lt;br /&gt;&lt;br /&gt;/api-bureau/confluence-api/.gitignore&lt;br /&gt;/api-bureau/confluence-api/ApiBureau.Confluence.sln&lt;br /&gt;/api-bureau/confluence-api/src/ApiBureau.Confluence.Api&lt;br /&gt;/api-bureau/confluence-api/test/ApiBureau.Confluence.Api.UnitTests&lt;br /&gt;&lt;br /&gt;/api-bureau/sharepoint-api/.gitignore&lt;br /&gt;/api-bureau/sharepoint-api/ApiBureau.SharePoint.sln&lt;br /&gt;/api-bureau/sharepoint-api/src/ApiBureau.SharePoint.Api&lt;br /&gt;/api-bureau/sharepoint-api/test/ApiBureau.SharePoint.Api.UnitTests&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;2.-solution-explorer&quot; tabindex=&quot;-1&quot;&gt;2. Solution Explorer &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#2.-solution-explorer&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;By default your Solution Explorer is showing only the most relevant files. And some files e.g., *&lt;strong&gt;.cs&lt;/strong&gt; will automatically appear in your Solution Explorer when you copy a file to your project folder or create a new C# file.&lt;/p&gt;
&lt;p&gt;Some files e.g., &lt;em&gt;.gitignore&lt;/em&gt; are hidden in the Solution Explorer so they don&#39;t distract you. It is good to familiarise yourself with the project folders and files. You can toggle these files by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solution Explorer Toolbar â†’ Click Show All Files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or you can see all files on your drive through File Explorer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solution Explorer â†’ Right click on Solution -&amp;gt; Open Folder in File Explorer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you don&#39;t use Solution Explorer, you can collapse this window to a vertical bar on the side of your screen. This is helpful when you share a screen, to get more visibility of your code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solution Explorer â†’ Click the Auto Hide &lt;strong&gt;pin icon&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To reverse, click the vertical bar, then Solution Explorer and then pin icon again.&lt;/p&gt;
&lt;p&gt;More &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/ide/use-solution-explorer?view=vs-2022&quot;&gt;Solution Explorer resources&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;3.-live-sharing-your-code---collaborative-coding&quot; tabindex=&quot;-1&quot;&gt;3. Live Sharing your Code - Collaborative Coding &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#3.-live-sharing-your-code---collaborative-coding&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You are becoming familiar with VS and one day you need a help with your code. Your colleague or friend doesn&#39;t have the project you are working on, maybe they don&#39;t have VS but they have Visual Studio Code. Now you can share your VS session with anyone. Your colleagues will see exactly what you see, or they can navigate independently without downloading your project.&lt;/p&gt;
&lt;p&gt;Live Share lets you collaboratively explore, edit and debug with others in real time, regardless of what programming languages you&#39;re using or app types you&#39;re building.&lt;/p&gt;
&lt;p&gt;Read more about &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/liveshare/quickstart/share&quot;&gt;Live Sharing&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;4.-default-configuration---appsettings.cs-%2F-appsettings.json&quot; tabindex=&quot;-1&quot;&gt;4. Default Configuration - AppSettings.cs / appsettings.json &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#4.-default-configuration---appsettings.cs-%2F-appsettings.json&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Application configuration is a huge subject. If you are working with &lt;a href=&quot;http://asp.net/&quot;&gt;ASP.NET&lt;/a&gt; Core, get familiar with &lt;strong&gt;appsettings.json&lt;/strong&gt; and also with &lt;strong&gt;AppSettings.cs&lt;/strong&gt;. &lt;code&gt;IOptions&amp;lt;AppSettings&amp;gt;&lt;/code&gt; will let you use your configuration through strongly typed settings and dependency injection.&lt;/p&gt;
&lt;p&gt;.NET has lots of helpers and methods which will simplify access to your configuration and you can use them also outside of &lt;a href=&quot;http://asp.net/&quot;&gt;ASP.NET&lt;/a&gt; Core applications, e.g., Console Application.&lt;/p&gt;
&lt;p&gt;Very important is the sequence of configuration providers:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;appsettings.json&lt;/li&gt;
&lt;li&gt;appsettings.{Environment}.json&lt;/li&gt;
&lt;li&gt;User secrets&lt;/li&gt;
&lt;li&gt;Environment variables&lt;/li&gt;
&lt;li&gt;Command-line arguments&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Lots of reading on this subject here &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-6.0&quot;&gt;Application Configuration&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;5.-manage-user-secrets&quot; tabindex=&quot;-1&quot;&gt;5. Manage User Secrets &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#5.-manage-user-secrets&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Any passwords, secrets, any information you don&#39;t want to share has to be secured and not committed to your source control system like &lt;strong&gt;Git&lt;/strong&gt;. How do you do it in VS? Very easily.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solution Explorer â†’ Select your project â†’ Right Click â†’ Select Manage User Secrets
&lt;ul&gt;
&lt;li&gt;VS might ask to install this NuGet &lt;code&gt;Microsoft.Extensions.Configuration.UserSecrets&lt;/code&gt; or it will open file &lt;code&gt;secrets.json&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You can use also .NET CLI to manage this file&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;File &lt;code&gt;secrets.json&lt;/code&gt; is kept outside of your VS projects and solution and it is never pushed to your git repository. Note, that this file &lt;strong&gt;is not encrypted&lt;/strong&gt;. It is a plain text file, still hanging on your computer in this location:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;%APPDATA%\Microsoft\UserSecrets\&amp;lt;user_secrets_id&amp;gt;\secrets.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Read more about &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/security/app-secrets?view=aspnetcore-6.0&amp;amp;tabs=linux&quot;&gt;Secrets in development&lt;/a&gt; subject.&lt;/p&gt;
&lt;h2 id=&quot;6.-editorconfig&quot; tabindex=&quot;-1&quot;&gt;6. editorconfig &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#6.-editorconfig&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you work alone or in a team, code consistency is very important in each project.&lt;/p&gt;
&lt;p&gt;You can add an EditorConfig file to your project or codebase to enforce consistent coding styles for everyone that works in the codebase. Do ask your colleagues and propose this process if it is not in place. Consistency helps with readability across all projects.&lt;/p&gt;
&lt;p&gt;More about this subject here &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/ide/create-portable-custom-editor-options?view=vs-2022&quot;&gt;Settings with EditorConfig&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;q%26a&quot; tabindex=&quot;-1&quot;&gt;Q&amp;amp;A &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#q%26a&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;q%3A-how-to-change-the-.net-version%3F&quot; tabindex=&quot;-1&quot;&gt;Q: How to change the .NET version? &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-advance/#q%3A-how-to-change-the-.net-version%3F&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A1: Double click on the project file to open the project as XML and edit the &lt;code&gt;&amp;lt;TargetFramework&amp;gt;net5.0&amp;lt;/TargetFramework&amp;gt;&lt;/code&gt; tag. You can also target multiple frameworks by replacing this tag with &lt;code&gt;&amp;lt;TargetFrameworks&amp;gt;net5.0;net6.0&amp;lt;/TargetFrameworks&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Visual Studio Intro</title>
    <link href="https://www.vaclavelias.com/dotnet/visual-studio-intro/"/>
    <updated>2021-04-03T00:00:00Z</updated>
    <id>https://www.vaclavelias.com/dotnet/visual-studio-intro/</id>
    <content xml:lang="en" type="html">&lt;p&gt;This intro is a &lt;strong&gt;quick reference&lt;/strong&gt; and it should help you to familiarise quickly with the key and essential &lt;strong&gt;Visual Studio&lt;/strong&gt; (VS) functionality.&lt;/p&gt;
&lt;p&gt;The VS Integrated Development Environment (IDE) might look overwhelming in the beginning but there is no need to know everything. More you work with VS you will start discovering what you need and you will eventually understand the complexity of VS by passive learning.&lt;/p&gt;
&lt;p&gt;Initial notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You should already be familiar with any coding/development IDE&lt;/li&gt;
&lt;li&gt;This is not a tutorial, this is a quick reference on what is the most important or helpful to know when you start working with Visual Studio. Do check any available material to familiarise and learn if you don&#39;t understand this guide&lt;/li&gt;
&lt;li&gt;If you don&#39;t know certain terms just google them&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;content&quot; tabindex=&quot;-1&quot;&gt;Content &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#content&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#1.-solution-vs-project&quot;&gt;1. Solution vs Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#2.-opening-solution-%2F-project&quot;&gt;2. Opening Solution / Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#3.-solution-explorer&quot;&gt;3. Solution Explorer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#4.-windows-management&quot;&gt;4. Windows Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#5.-f12-is-your-friend---go-to-definition&quot;&gt;5. F12 is your friend - Go to Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#6.-ctrl%2Bt-and-ctrl%2Bq---search-everywhere&quot;&gt;6. CTRL+T and CTRL+Q - Search Everywhere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#7.-dotnet-command&quot;&gt;7. dotnet command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#8.-project-story---viewing-csproj-in-summary&quot;&gt;8. Project story - Viewing csproj in summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#9.-project-packages-(nuget)&quot;&gt;9. Project Packages (nuget)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#10.-visual-studio-extensions&quot;&gt;10. Visual Studio Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#11.-visual-studio-settings&quot;&gt;11. Visual Studio Settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#q%26a&quot;&gt;Q&amp;amp;A&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1.-solution-vs-project&quot; tabindex=&quot;-1&quot;&gt;1. Solution vs Project &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#1.-solution-vs-project&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Solution contains 1 or more projects to logically organise your projects together.&lt;/p&gt;
&lt;h2 id=&quot;2.-opening-solution-%2F-project&quot; tabindex=&quot;-1&quot;&gt;2. Opening Solution / Project &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#2.-opening-solution-%2F-project&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can open a project by clicking on a file with extension &lt;strong&gt;.sln&lt;/strong&gt; (solution) or &lt;strong&gt;.csproj&lt;/strong&gt; (C# project). If you open a project which is part of a solution, the solution might open instead automatically.&lt;/p&gt;
&lt;h2 id=&quot;3.-solution-explorer&quot; tabindex=&quot;-1&quot;&gt;3. Solution Explorer &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#3.-solution-explorer&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once you open your Solution or Project you want to see your &lt;strong&gt;Solution Explorer&lt;/strong&gt; which contains a logical hierarchy of all folders and files which are needed to build your project. You are going to use this window and navigate through it very frequently. Usually you would have your Solution Explorer on the right or on the left always visible.&lt;/p&gt;
&lt;p&gt;Note: If you cannot see it go to Menu â†’ View â†’ Click Solution Explorer (first in the menu)&lt;/p&gt;
&lt;h2 id=&quot;4.-windows-management&quot; tabindex=&quot;-1&quot;&gt;4. Windows Management &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#4.-windows-management&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You might use these options below frequently to arrange your windows. More info about &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/ide/customizing-window-layouts-in-visual-studio?view=vs-2022&quot;&gt;customising layouts&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vertical Document Group - If you need to see different files next to each other &lt;img src=&quot;https://www.vaclavelias.com/assets/img/2021/Visual-Studio-Document-Group.webp&quot; alt=&quot;Document Groups&quot; /&gt;{: .img-fluid}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Horizontal Document Group - If you need to see different files horizontally&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Split Window - You can split horizontally the edition of a file through Window â†’ Split. This is especially useful when visualizing or editing two locations in a large file &lt;img src=&quot;https://www.vaclavelias.com/assets/img/2021/Visual-Studio-Horizontal-Split-Code-Editor.gif&quot; alt=&quot;Split Window&quot; /&gt;{: .img-fluid} &lt;img src=&quot;https://www.vaclavelias.com/assets/img/2021/Visual-Studio-Vertical-Split-Code-Editor.gif&quot; alt=&quot;Split Window&quot; /&gt;{: .img-fluid}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New Window - Open an instance of the same file in a separate window, Window â†’ New Window&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;5.-f12-is-your-friend---go-to-definition&quot; tabindex=&quot;-1&quot;&gt;5. F12 is your friend - Go to Definition &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#5.-f12-is-your-friend---go-to-definition&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;Go To Definition&lt;/strong&gt; feature navigates to the source of a type or member, and opens the result in a new tab.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pressing F12 while your text cursor is somewhere inside the symbol name&lt;/li&gt;
&lt;li&gt;Right click mouse on the symbol â†’ Go to Definition&lt;/li&gt;
&lt;li&gt;Or ALT+F12 to peek the identifier definition without opening a new tab&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;6.-ctrl%2Bt-and-ctrl%2Bq---search-everywhere&quot; tabindex=&quot;-1&quot;&gt;6. CTRL+T and CTRL+Q - Search Everywhere &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#6.-ctrl%2Bt-and-ctrl%2Bq---search-everywhere&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CTRL+Q - Search everywhere in the code, including menu items&lt;/li&gt;
&lt;li&gt;CTRL+T - Search everywhere in the code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;7.-dotnet-command&quot; tabindex=&quot;-1&quot;&gt;7. dotnet command &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#7.-dotnet-command&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It provides commands for working with .NET projects
&lt;ul&gt;
&lt;li&gt;e.g. &lt;code&gt;dotnet build&lt;/code&gt; builds a project&lt;/li&gt;
&lt;li&gt;e.g. &lt;code&gt;dotnet --info&lt;/code&gt; shows detailed information about a .NET installation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;It runs .NET applications
&lt;ul&gt;
&lt;li&gt;e.g. &lt;code&gt;dotnet myApplication.exe&lt;/code&gt; or &lt;code&gt;dotnet myApplication.dll&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;8.-project-story---viewing-csproj-in-summary&quot; tabindex=&quot;-1&quot;&gt;8. Project story - Viewing csproj in summary &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#8.-project-story---viewing-csproj-in-summary&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;.NET projects are based on the MSBuild format. Project files, which have extensions like &lt;strong&gt;.csproj&lt;/strong&gt; for C# project are in XML format. The csproj file includes settings related to targeted .NET Frameworks, project folders, NuGet package references etc.&lt;/p&gt;
&lt;p&gt;You can edit in 2 ways&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solution Explorer â†’ Select your project â†’ Right Click â†’ Select Edit Project File&lt;/li&gt;
&lt;li&gt;Solution Explorer â†’ Double click on the project name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;9.-project-packages-(nuget)&quot; tabindex=&quot;-1&quot;&gt;9. Project Packages (nuget) &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#9.-project-packages-(nuget)&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An essential tool for any modern development platform is a mechanism through which developers can create, share, and consume useful code. Often such code is bundled into &amp;quot;packages&amp;quot; that contain compiled code (as DLLs) along with other content needed in the projects that consume these packages (source &lt;a href=&quot;https://docs.microsoft.com/en-us/nuget/what-is-nuget&quot;&gt;An introduction to Nuget&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For .NET (including .NET Core), the Microsoft-supported mechanism for sharing code is &lt;strong&gt;NuGet&lt;/strong&gt; (essentially a single ZIP file) with the &lt;strong&gt;.nupkg&lt;/strong&gt; extension.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solution Explorer â†’ Right click on Projectâ†’ Manage Nuget Packages
&lt;ul&gt;
&lt;li&gt;Browse - Search for new packages&lt;/li&gt;
&lt;li&gt;Installed - See your installed packages&lt;/li&gt;
&lt;li&gt;Updates - See current updates for your installed packages (mind minor vs major updates)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;10.-visual-studio-extensions&quot; tabindex=&quot;-1&quot;&gt;10. Visual Studio Extensions &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#10.-visual-studio-extensions&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Extensions allow you to customize and enhance your experience in Visual Studio by adding new features or integrating existing tools (Amazon, Azure, ..). The main purpose is to increase &lt;strong&gt;your productivity&lt;/strong&gt; and cater to your workflow.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Top Menu â†’ Extensions â†’ Manage Extensions
&lt;ul&gt;
&lt;li&gt;Installed - All installed and pre-installed extensions&lt;/li&gt;
&lt;li&gt;Online - Search for new extensions&lt;/li&gt;
&lt;li&gt;Updates - Update extensions, some extensions update automatically&lt;/li&gt;
&lt;li&gt;Roaming Extensions Manager - If you are logged into Visual Studio with your Microsoft account you can sync your extensions to other devices with Visual Studio&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Top free extensions for development
&lt;ul&gt;
&lt;li&gt;CodeMaid&lt;/li&gt;
&lt;li&gt;Productivity Power Tools 2019/2022 - Installs a few individual extensions for your productivity&lt;/li&gt;
&lt;li&gt;Live Share - Real-time collaborative development in Visual Studio and Visual Studio Code&lt;/li&gt;
&lt;li&gt;Web Essentials 2019/2022 -  Installs a few individual extensions for your web development&lt;/li&gt;
&lt;li&gt;AWS Toolkit - If you work/deploy to AWS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;11.-visual-studio-settings&quot; tabindex=&quot;-1&quot;&gt;11. Visual Studio Settings &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#11.-visual-studio-settings&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Top Menu â†’ Edit â†’ Advance â†’ Word Wrap
&lt;ul&gt;
&lt;li&gt;Very useful so you don&#39;t need to move your horizontal bar&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Top Menu â†’ Toolsâ†’ Options â†’ Projects and Solutions â†’ Track Active Item in Solution Explorer -
&lt;ul&gt;
&lt;li&gt;Solution Explorer item is selected automatically when you edit the file in the Editor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Top Menu â†’ Toolsâ†’ Options â†’ Productivity Power Tools (Extension) â†’ Power Commands â†’ Remove and Sort Using on save&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;q%26a&quot; tabindex=&quot;-1&quot;&gt;Q&amp;amp;A &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#q%26a&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;q%3A-how-to-create-a-new-project-within-the-solution%3F&quot; tabindex=&quot;-1&quot;&gt;Q: How to create a new project within the solution? &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#q%3A-how-to-create-a-new-project-within-the-solution%3F&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A1: Solution Explorer â†’ Right click on Solution â†’ Add â†’ New project or Existing Project&lt;/p&gt;
&lt;p&gt;A2: Top Menu â†’ File â†’ Add â†’ New project or Existing Project&lt;/p&gt;
&lt;h3 id=&quot;q%3A-how-to-change-the-.net-version%3F&quot; tabindex=&quot;-1&quot;&gt;Q: How to change the .NET version? &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/visual-studio-intro/#q%3A-how-to-change-the-.net-version%3F&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A1: Double click on the project file to open the project as XML and edit the &lt;code&gt;&amp;lt;TargetFramework&amp;gt;net5.0&amp;lt;/TargetFramework&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;
&lt;p&gt;A2: Solution Explorer â†’ Right Click on the Project â†’ Click Properties â†’ Click Application â†’ Change Target Framework&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Jazor experiment</title>
    <link href="https://www.vaclavelias.com/dotnet/jazor-experiment/"/>
    <updated>2020-10-31T00:00:00Z</updated>
    <id>https://www.vaclavelias.com/dotnet/jazor-experiment/</id>
    <content xml:lang="en" type="html">&lt;p&gt;This experiment library helps with very common actions on the website which involve repeating JavaScript code across multiple different projects.&lt;/p&gt;
&lt;p&gt;Click a button or a link, do something in the backend and UI. This library takes an approach rather updating whole HTML blocks than granular tags with JSON and JavaScript libraries, so there is no need fiddling and mapping JSON objects to whatever UI you have.&lt;/p&gt;
&lt;p&gt;You might find this approach useful in certain project cases if you want to write minimum or no JavaScript. Still, JavaScript knowledge is requiredÂ in certain scenarios.&lt;/p&gt;
&lt;p&gt;There is a crossover with &lt;a href=&quot;https://github.com/dotnet/blazor&quot;&gt;Blazor&lt;/a&gt; or rather Jazor is filling a gap between static HTML/Razor pages and Blazor.&lt;/p&gt;
&lt;p&gt;When could you possibly use this library and not necessarily Blazor?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You have got many Partial views in Razor pages and views which you would like to reuse e.g.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token return-type class-name&quot;&gt;IActionResult&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;OnGetNews&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;  &lt;span class=&quot;token function&quot;&gt;Partial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;_NewsPartial&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;You would like a hybrid of your current website and add simple SPA functionality&lt;/li&gt;
&lt;li&gt;Your project doesn&#39;t require minimising traffic in between the browser and server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This library is using currently:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TypeScript to handle all common actions workload&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://asp.net/&quot;&gt;ASP.NET&lt;/a&gt; Core 5.0 TagHelpers to simplify using &lt;strong&gt;data-&lt;/strong&gt; and a bit help with strongly typed Controllers and Actions&lt;/li&gt;
&lt;li&gt;GitHub link &lt;a href=&quot;https://github.com/VaclavElias/Jazor&quot;&gt;https://github.com/VaclavElias/Jazor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;requirements&quot; tabindex=&quot;-1&quot;&gt;Requirements &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/jazor-experiment/#requirements&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;jazor.js&lt;/code&gt; to your Razor page or _Layout.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;@addTagHelper *, Jazor&lt;/code&gt; to your _ViewImports.cshtml&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;todo&quot; tabindex=&quot;-1&quot;&gt;ToDo &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/jazor-experiment/#todo&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add more functionality&lt;/li&gt;
&lt;li&gt;Make prompts and spinners pluggable&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;examples&quot; tabindex=&quot;-1&quot;&gt;Examples &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/jazor-experiment/#examples&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I will be using &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; in my examples.&lt;/p&gt;
&lt;h3 id=&quot;example-1&quot; tabindex=&quot;-1&quot;&gt;Example 1 &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/jazor-experiment/#example-1&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Load multiple delayed HTML / Partial Views.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Load News part&lt;/li&gt;
&lt;li&gt;Load Top News part after 1 second&lt;/li&gt;
&lt;li&gt;This will load your HTML from your desired url&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;jazor-url&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/examples/news&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Loading...&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;jazor-url&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;@((nameof(ExamplesController), nameof(ExamplesController.TopNews), null))&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;jazor-delay&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Loading...&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;example-2&quot; tabindex=&quot;-1&quot;&gt;Example 2 &lt;a class=&quot;direct-link&quot; href=&quot;https://www.vaclavelias.com/dotnet/jazor-experiment/#example-2&quot;&gt;ðŸ”—&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Click a button or link to load HTML / Partial Views to your target element.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;jazor-click&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/examples/itnews&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;jazor-target&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;content&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;btn btn-primary&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Show .NET News&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;jazor-click&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;@((nameof(ExamplesController), nameof(ExamplesController.AngularNews), null))&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;jazor-target&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;content&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;btn btn-primary&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Show Angular News&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;content&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;The content will be loaded here.&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Visual Studio Debugger Enumerable Visualizer</title>
    <link href="https://www.vaclavelias.com/dotnet/visual-studio-debugger-enumerable-visualizer/"/>
    <updated>2019-06-11T00:00:00Z</updated>
    <id>https://www.vaclavelias.com/dotnet/visual-studio-debugger-enumerable-visualizer/</id>
    <content xml:lang="en" type="html">&lt;p&gt;Visual Studio Debugger Enumerable Visualizer without any &lt;code&gt;[Serialize]&lt;/code&gt; attribute, using Json was an experiment to get a better experience when debugging IEnumerables.&lt;/p&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; style=&quot;display: none;&quot;&gt;
    &lt;symbol id=&quot;success&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 16 16&quot;&gt;
        &lt;path d=&quot;M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z&quot;&gt;&lt;/path&gt;
    &lt;/symbol&gt;
    &lt;symbol id=&quot;info&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 16 16&quot;&gt;
        &lt;path d=&quot;M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z&quot;&gt;&lt;/path&gt;
    &lt;/symbol&gt;
    &lt;symbol id=&quot;warning&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 16 16&quot;&gt;
        &lt;path d=&quot;M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z&quot;&gt;&lt;/path&gt;
    &lt;/symbol&gt;
    &lt;symbol id=&quot;danger&quot; fill=&quot;currentColor&quot; viewBox=&quot;0 0 16 16&quot;&gt;
        &lt;path d=&quot;M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z&quot;&gt;&lt;/path&gt;
    &lt;/symbol&gt;
&lt;/svg&gt;
&lt;div class=&quot;alert alert-warning d-flex&quot;&gt;
    &lt;svg class=&quot;bi flex-shrink-0 me-2 mt-1&quot; width=&quot;24&quot; height=&quot;24&quot; role=&quot;img&quot;&gt;&lt;use xlink:href=&quot;#warning&quot;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;div&gt;
        This is now &lt;strong&gt;inbuilt&lt;/strong&gt; in &lt;a href=&quot;https://devblogs.microsoft.com/visualstudio/view-net-collections-with-the-new-ienumerable-debugger-visualizer/&quot;&gt;Visual Studio 2022&lt;/a&gt; from version 17.2.
    &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/4528464/59273012-2dc98f80-8c4f-11e9-8a76-c11620581a3e.png&quot; alt=&quot;Visualiser example&quot; /&gt;{: .img-fluid}&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/4528464/46559908-c0a87200-c8e9-11e8-83ba-deea211840f0.png&quot; alt=&quot;Visualiser example&quot; /&gt;{: .img-fluid}&lt;/p&gt;
&lt;p&gt;Read more about my implementation here &lt;a href=&quot;https://github.com/codecapital/EnumerableVisualizer&quot;&gt;EnumerableVisualizer&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Configuration experiment in ASP.NET Core â€“ RemoteJsonFile</title>
    <link href="https://www.vaclavelias.com/dotnet/configuration-experiment-aspnet.core-remote-json-file/"/>
    <updated>2019-06-01T00:00:00Z</updated>
    <id>https://www.vaclavelias.com/dotnet/configuration-experiment-aspnet.core-remote-json-file/</id>
    <content xml:lang="en" type="html">&lt;p&gt;This is an experiment project to access &lt;strong&gt;appsettings.json&lt;/strong&gt; from Azure Blob or any remote url.&lt;/p&gt;
&lt;p&gt;I will use public access to this Azure file considering no user secrets are included in this file. You would need to add additional options to secure your link if any user secrets are transmitted.&lt;/p&gt;
&lt;p&gt;Example url: &lt;a href=&quot;https://your-storage.blob.core.windows.net/your-blob/appsettings.json&quot;&gt;https://your-storage.blob.core.windows.net/your-blob/appsettings.json&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;&lt;code class=&quot;language-csharp&quot;&gt;services&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AddRemoteJsonFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Configuration&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;AppSettings:Url:RemoteUrl&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; options &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    Configuration &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; options&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Source here &lt;a href=&quot;https://github.com/codecapital/CodeCapital.AspNetCore/tree/net5.0/src/CodeCapital.AspNetCore.Extensions.Configuration.Json&quot;&gt;CodeCapital.AspNetCore.Extensions.Configuration.Json&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>